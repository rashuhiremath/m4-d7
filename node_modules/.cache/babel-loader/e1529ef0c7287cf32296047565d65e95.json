{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shashiraj\\\\Desktop\\\\react\\\\m4-d7\\\\src\\\\components\\\\CommentArea.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport CommentList from \"./CommentList\";\nimport AddComment from \"./AddComment\";\nimport Loading from \"./Loading\";\nimport Error from \"./Error\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentArea = props => {\n  _s();\n\n  // state = {\n  //     comments: [], // comments will go here\n  //     isLoading: false,\n  //     isError: false\n  // }\n  const [comments, setComments] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const fetchData = async () => {\n    setIsLoading({\n      isLoading: true\n    });\n\n    try {\n      let response = await fetch(\"https://striveschool-api.herokuapp.com/api/comments/\" + props.asin, {\n        headers: {\n          Authorization: \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MGI3OWY5NTgxNmI1YjAwMTU5NDA3NDAiLCJpYXQiOjE2MjI2NDY2NzcsImV4cCI6MTYyMzg1NjI3N30.y-rBwB5WAQOWBvWrLlAgTQUrbGulxd2M6cWH3VLyGLw\"\n        }\n      });\n      console.log(response);\n\n      if (response.ok) {\n        let comments = await response.json();\n        setComments({\n          comments: comments,\n          isLoading: false,\n          isError: false\n        });\n      } else {\n        console.log(\"error\");\n        setIsError({\n          isLoading: false,\n          isError: true\n        });\n      }\n    } catch (error) {\n      console.log(error);\n      setIsError({\n        isLoading: false,\n        isError: true\n      });\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [props.asin]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }, this), isError && /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(AddComment, {\n      asin: props.asin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommentList, {\n      commentsToShow: comments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CommentArea, \"16ZFUbzLAKNRtQTYKxvEjqhqTHQ=\");\n\n_c = CommentArea;\nexport default CommentArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentArea\");","map":{"version":3,"sources":["C:/Users/Shashiraj/Desktop/react/m4-d7/src/components/CommentArea.jsx"],"names":["useEffect","useState","CommentList","AddComment","Loading","Error","CommentArea","props","comments","setComments","isLoading","setIsLoading","isError","setIsError","fetchData","response","fetch","asin","headers","Authorization","console","log","ok","json","error"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B;AACA;AACA;AACA;AAEA;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;;AACA,QAAMa,SAAS,GAAG,YAAY;AAC5BH,IAAAA,YAAY,CAAC;AACXD,MAAAA,SAAS,EAAE;AADA,KAAD,CAAZ;;AAGA,QAAI;AACF,UAAIK,QAAQ,GAAG,MAAMC,KAAK,CACxB,yDAAyDT,KAAK,CAACU,IADvC,EAExB;AACEC,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EACX;AAFK;AADX,OAFwB,CAA1B;AASAC,MAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;;AACA,UAAIA,QAAQ,CAACO,EAAb,EAAiB;AACf,YAAId,QAAQ,GAAG,MAAMO,QAAQ,CAACQ,IAAT,EAArB;AACAd,QAAAA,WAAW,CAAC;AAAED,UAAAA,QAAQ,EAAEA,QAAZ;AAAsBE,UAAAA,SAAS,EAAE,KAAjC;AAAwCE,UAAAA,OAAO,EAAE;AAAjD,SAAD,CAAX;AACD,OAHD,MAGO;AACLQ,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAR,QAAAA,UAAU,CAAC;AAAEH,UAAAA,SAAS,EAAE,KAAb;AAAoBE,UAAAA,OAAO,EAAE;AAA7B,SAAD,CAAV;AACD;AACF,KAlBD,CAkBE,OAAOY,KAAP,EAAc;AACdJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACAX,MAAAA,UAAU,CAAC;AAAEH,QAAAA,SAAS,EAAE,KAAb;AAAoBE,QAAAA,OAAO,EAAE;AAA7B,OAAD,CAAV;AACD;AACF,GA1BD;;AA2BAZ,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,SAAS;AACV,GAFQ,EAEN,CAACP,KAAK,CAACU,IAAP,CAFM,CAAT;AAIA,sBACE;AAAA,eACGP,SAAS,iBAAI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADhB,EAEGE,OAAO,iBAAI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAFd,eAGE,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEL,KAAK,CAACU;AAAxB;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,WAAD;AAAa,MAAA,cAAc,EAAET;AAA7B;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAjDD;;GAAMF,W;;KAAAA,W;AAmDN,eAAeA,WAAf","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport CommentList from \"./CommentList\";\r\nimport AddComment from \"./AddComment\";\r\nimport Loading from \"./Loading\";\r\nimport Error from \"./Error\";\r\n\r\nconst CommentArea = (props) => {\r\n  // state = {\r\n  //     comments: [], // comments will go here\r\n  //     isLoading: false,\r\n  //     isError: false\r\n\r\n  // }\r\n  const [comments, setComments] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n  const fetchData = async () => {\r\n    setIsLoading({\r\n      isLoading: true,\r\n    });\r\n    try {\r\n      let response = await fetch(\r\n        \"https://striveschool-api.herokuapp.com/api/comments/\" + props.asin,\r\n        {\r\n          headers: {\r\n            Authorization:\r\n              \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MGI3OWY5NTgxNmI1YjAwMTU5NDA3NDAiLCJpYXQiOjE2MjI2NDY2NzcsImV4cCI6MTYyMzg1NjI3N30.y-rBwB5WAQOWBvWrLlAgTQUrbGulxd2M6cWH3VLyGLw\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response);\r\n      if (response.ok) {\r\n        let comments = await response.json();\r\n        setComments({ comments: comments, isLoading: false, isError: false });\r\n      } else {\r\n        console.log(\"error\");\r\n        setIsError({ isLoading: false, isError: true });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      setIsError({ isLoading: false, isError: true });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [props.asin]);\r\n\r\n  return (\r\n    <div>\r\n      {isLoading && <Loading />}\r\n      {isError && <Error />}\r\n      <AddComment asin={props.asin} />\r\n      <CommentList commentsToShow={comments} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentArea;\r\n"]},"metadata":{},"sourceType":"module"}