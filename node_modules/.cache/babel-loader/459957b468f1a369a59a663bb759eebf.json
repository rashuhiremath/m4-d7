{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shashiraj\\\\Desktop\\\\react\\\\m4-d7\\\\src\\\\components\\\\CommentArea.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport CommentList from './CommentList';\nimport AddComment from './AddComment';\nimport Loading from './Loading';\nimport Error from './Error';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentArea = () => {\n  _s();\n\n  // state = {\n  //     comments: [], // comments will go here\n  //     isLoading: false,\n  //     isError: false\n  // }\n  const [comments, setComments] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  useEffect = async prevProps => {\n    if (prevProps.asin !== props.asin) {\n      setIsLoading({\n        isLoading: true\n      });\n\n      try {\n        let response = await fetch('https://striveschool-api.herokuapp.com/api/comments/' + props.asin, {\n          headers: {\n            Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MGI3OWY5NTgxNmI1YjAwMTU5NDA3NDAiLCJpYXQiOjE2MjI2NDY2NzcsImV4cCI6MTYyMzg1NjI3N30.y-rBwB5WAQOWBvWrLlAgTQUrbGulxd2M6cWH3VLyGLw'\n          }\n        });\n        console.log(response);\n\n        if (response.ok) {\n          let comments = await response.json();\n          setComments({\n            comments: comments,\n            isLoading: false,\n            isError: false\n          });\n        } else {\n          console.log('error');\n          setIsError({\n            isLoading: false,\n            isError: true\n          });\n        }\n      } catch (error) {\n        console.log(error);\n        setIsError({\n          isLoading: false,\n          isError: true\n        });\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 31\n    }, this), isError && /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(AddComment, {\n      asin: props.asin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(CommentList, {\n      commentsToShow: comments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 13\n  }, this), [];\n};\n\n_s(CommentArea, \"iltjl+j/cUMwjeiUD+usClKY7Bk=\");\n\n_c = CommentArea;\nexport default CommentArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentArea\");","map":{"version":3,"sources":["C:/Users/Shashiraj/Desktop/react/m4-d7/src/components/CommentArea.jsx"],"names":["useEffect","useState","CommentList","AddComment","Loading","Error","CommentArea","comments","setComments","isLoading","setIsLoading","isError","setIsError","prevProps","asin","props","response","fetch","headers","Authorization","console","log","ok","json","error"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAEtB;AACA;AACA;AACA;AAEA;AACJ,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBP,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACQ,SAAD,EAAWC,YAAX,IAA2BT,QAAQ,CAAC,KAAD,CAAzC;AACA,QAAM,CAACU,OAAD,EAASC,UAAT,IAAuBX,QAAQ,CAAC,KAAD,CAArC;;AAKID,EAAAA,SAAS,GAAG,MAAOa,SAAP,IAAqB;AAC7B,QAAIA,SAAS,CAACC,IAAV,KAAmBC,KAAK,CAACD,IAA7B,EAAmC;AAC/BJ,MAAAA,YAAY,CAAC;AACTD,QAAAA,SAAS,EAAE;AADF,OAAD,CAAZ;;AAGA,UAAI;AACA,YAAIO,QAAQ,GAAG,MAAMC,KAAK,CAAC,yDAAyDF,KAAK,CAACD,IAAhE,EAAsE;AAC5FI,UAAAA,OAAO,EAAE;AACLC,YAAAA,aAAa,EAAE;AADV;AADmF,SAAtE,CAA1B;AAKAC,QAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;;AACA,YAAIA,QAAQ,CAACM,EAAb,EAAiB;AACb,cAAIf,QAAQ,GAAG,MAAMS,QAAQ,CAACO,IAAT,EAArB;AACAf,UAAAA,WAAW,CAAC;AAAED,YAAAA,QAAQ,EAAEA,QAAZ;AAAsBE,YAAAA,SAAS,EAAE,KAAjC;AAAwCE,YAAAA,OAAO,EAAE;AAAjD,WAAD,CAAX;AACH,SAHD,MAGO;AACHS,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAT,UAAAA,UAAU,CAAC;AAAEH,YAAAA,SAAS,EAAE,KAAb;AAAoBE,YAAAA,OAAO,EAAE;AAA7B,WAAD,CAAV;AACH;AACJ,OAdD,CAcE,OAAOa,KAAP,EAAc;AACZJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACAZ,QAAAA,UAAU,CAAC;AAAEH,UAAAA,SAAS,EAAE,KAAb;AAAoBE,UAAAA,OAAO,EAAE;AAA7B,SAAD,CAAV;AACH;AACJ;AACJ,GAxBD;;AA2BI,SAAO,aACH;AAAA,eACKF,SAAS,iBAAI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADlB,EAEKE,OAAO,iBAAI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAFhB,eAGI,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEI,KAAK,CAACD;AAAxB;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,WAAD;AAAa,MAAA,cAAc,EAAEP;AAA7B;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADG,EAQV,EARG;AASP,CAnDD;;GAAMD,W;;KAAAA,W;AAqDN,eAAeA,WAAf","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport CommentList from './CommentList'\r\nimport AddComment from './AddComment'\r\nimport Loading from './Loading'\r\nimport Error from './Error'\r\n\r\nconst CommentArea = () => {\r\n\r\n    // state = {\r\n    //     comments: [], // comments will go here\r\n    //     isLoading: false,\r\n    //     isError: false\r\n\r\n    // }\r\nconst [comments,setComments] = useState([])\r\nconst [isLoading,setIsLoading] = useState(false)\r\nconst [isError,setIsError] = useState(false)\r\n\r\n\r\n\r\n\r\n    useEffect = async (prevProps) => {\r\n        if (prevProps.asin !== props.asin) {\r\n            setIsLoading({\r\n                isLoading: true\r\n            })\r\n            try {\r\n                let response = await fetch('https://striveschool-api.herokuapp.com/api/comments/' + props.asin, {\r\n                    headers: {\r\n                        Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MGI3OWY5NTgxNmI1YjAwMTU5NDA3NDAiLCJpYXQiOjE2MjI2NDY2NzcsImV4cCI6MTYyMzg1NjI3N30.y-rBwB5WAQOWBvWrLlAgTQUrbGulxd2M6cWH3VLyGLw'\r\n                    }\r\n                })\r\n                console.log(response)\r\n                if (response.ok) {\r\n                    let comments = await response.json()\r\n                    setComments({ comments: comments, isLoading: false, isError: false })\r\n                } else {\r\n                    console.log('error')\r\n                    setIsError({ isLoading: false, isError: true })\r\n                }\r\n            } catch (error) {\r\n                console.log(error)\r\n                setIsError({ isLoading: false, isError: true })\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n        return (\r\n            <div>\r\n                {isLoading && <Loading />}\r\n                {isError && <Error />}\r\n                <AddComment asin={props.asin} />\r\n                <CommentList commentsToShow={comments} />\r\n            </div>\r\n        )\r\n    ,[]\r\n}\r\n\r\nexport default CommentArea"]},"metadata":{},"sourceType":"module"}