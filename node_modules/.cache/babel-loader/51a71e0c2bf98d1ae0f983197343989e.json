{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shashiraj\\\\Desktop\\\\react\\\\m4-d7\\\\src\\\\components\\\\CommentArea.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport CommentList from './CommentList';\nimport AddComment from './AddComment';\nimport Loading from './Loading';\nimport Error from './Error';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentArea = props => {\n  _s();\n\n  // state = {\n  //     comments: [], // comments will go here\n  //     isLoading: false,\n  //     isError: false\n  // }\n  const [comments, setComments] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  useEffect(() => {}, []); // useEffect = async (prevProps) => {\n  //     if (prevProps.asin !== props.asin) {\n  //         setIsLoading({\n  //             isLoading: true\n  //         })\n  //         try {\n  //             let response = await fetch('https://striveschool-api.herokuapp.com/api/comments/' + props.asin, {\n  //                 headers: {\n  //                     Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MGI3OWY5NTgxNmI1YjAwMTU5NDA3NDAiLCJpYXQiOjE2MjI2NDY2NzcsImV4cCI6MTYyMzg1NjI3N30.y-rBwB5WAQOWBvWrLlAgTQUrbGulxd2M6cWH3VLyGLw'\n  //                 }\n  //             })\n  //             console.log(response)\n  //             if (response.ok) {\n  //                 let comments = await response.json()\n  //                 setComments({ comments: comments, isLoading: false, isError: false })\n  //             } else {\n  //                 console.log('error')\n  //                 setIsError({ isLoading: false, isError: true })\n  //             }\n  //         } catch (error) {\n  //             console.log(error)\n  //             setIsError({ isLoading: false, isError: true })\n  //         }\n  //     }\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 31\n    }, this), isError && /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(AddComment, {\n      asin: props.asin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(CommentList, {\n      commentsToShow: comments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 13\n  }, this);\n};\n\n_s(CommentArea, \"YHc3TZaKpl5EBuUJgkaTaWy0cOc=\");\n\n_c = CommentArea;\nexport default CommentArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentArea\");","map":{"version":3,"sources":["C:/Users/Shashiraj/Desktop/react/m4-d7/src/components/CommentArea.jsx"],"names":["useEffect","useState","CommentList","AddComment","Loading","Error","CommentArea","props","comments","setComments","isLoading","setIsLoading","isError","setIsError","asin"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAE3B;AACA;AACA;AACA;AAEA;AACJ,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBR,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACS,SAAD,EAAWC,YAAX,IAA2BV,QAAQ,CAAC,KAAD,CAAzC;AACA,QAAM,CAACW,OAAD,EAASC,UAAT,IAAuBZ,QAAQ,CAAC,KAAD,CAArC;AAGAD,EAAAA,SAAS,CAAC,MAAK,CAEd,CAFQ,EAEN,EAFM,CAAT,CAb+B,CAiB3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGI,sBACI;AAAA,eACKU,SAAS,iBAAI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADlB,EAEKE,OAAO,iBAAI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAFhB,eAGI,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEL,KAAK,CAACO;AAAxB;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,WAAD;AAAa,MAAA,cAAc,EAAEN;AAA7B;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASP,CArDD;;GAAMF,W;;KAAAA,W;AAuDN,eAAeA,WAAf","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport CommentList from './CommentList'\r\nimport AddComment from './AddComment'\r\nimport Loading from './Loading'\r\nimport Error from './Error'\r\n\r\nconst CommentArea = (props) => {\r\n\r\n    // state = {\r\n    //     comments: [], // comments will go here\r\n    //     isLoading: false,\r\n    //     isError: false\r\n\r\n    // }\r\nconst [comments,setComments] = useState([])\r\nconst [isLoading,setIsLoading] = useState(false)\r\nconst [isError,setIsError] = useState(false)\r\n\r\n\r\nuseEffect(()=> {\r\n\r\n}, [])\r\n\r\n    // useEffect = async (prevProps) => {\r\n    //     if (prevProps.asin !== props.asin) {\r\n    //         setIsLoading({\r\n    //             isLoading: true\r\n    //         })\r\n    //         try {\r\n    //             let response = await fetch('https://striveschool-api.herokuapp.com/api/comments/' + props.asin, {\r\n    //                 headers: {\r\n    //                     Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MGI3OWY5NTgxNmI1YjAwMTU5NDA3NDAiLCJpYXQiOjE2MjI2NDY2NzcsImV4cCI6MTYyMzg1NjI3N30.y-rBwB5WAQOWBvWrLlAgTQUrbGulxd2M6cWH3VLyGLw'\r\n    //                 }\r\n    //             })\r\n    //             console.log(response)\r\n    //             if (response.ok) {\r\n    //                 let comments = await response.json()\r\n    //                 setComments({ comments: comments, isLoading: false, isError: false })\r\n    //             } else {\r\n    //                 console.log('error')\r\n    //                 setIsError({ isLoading: false, isError: true })\r\n    //             }\r\n    //         } catch (error) {\r\n    //             console.log(error)\r\n    //             setIsError({ isLoading: false, isError: true })\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    \r\n        return (\r\n            <div>\r\n                {isLoading && <Loading />}\r\n                {isError && <Error />}\r\n                <AddComment asin={props.asin} />\r\n                <CommentList commentsToShow={comments} />\r\n            </div>\r\n        )\r\n    \r\n}\r\n\r\nexport default CommentArea"]},"metadata":{},"sourceType":"module"}